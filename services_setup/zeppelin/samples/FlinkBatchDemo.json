{
  "paragraphs":[
    {
      "text":"%md\n# FLink Batch Demo\n#### Two simple examples for Flink batch API",
      "user":"anonymous",
      "dateUpdated":"2019-11-04T07:36:41+0000",
      "config":{
        "editorSetting":{
          "language":"markdown",
          "editOnDblClick":true,
          "completionKey":"TAB",
          "completionSupport":false
        },
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "fontSize":9,
        "editorHide":true,
        "results":{

        },
        "enabled":true,
        "tableHide":false,
        "runOnSelectionChange":true,
        "title":false,
        "checkEmpty":true
      },
      "settings":{
        "params":{

        },
        "forms":{

        }
      },
      "results":{
        "code":"SUCCESS",
        "msg":[
          {
            "type":"HTML",
            "data":"<div class=\"markdown-body\">\n<h1>FLink Batch Demo</h1>\n<h4>Two simple examples for Flink batch API</h4>\n\n</div>"
          }
        ]
      },
      "apps":[

      ],
      "progressUpdateIntervalMs":500,
      "jobName":"paragraph_1572736281468_79975022",
      "id":"paragraph_1572736281468_79975022",
      "dateCreated":"2019-11-02T23:11:21+0000",
      "dateStarted":"2019-11-04T07:36:41+0000",
      "dateFinished":"2019-11-04T07:36:41+0000",
      "status":"FINISHED",
      "focus":true,
      "$$hashKey":"object:283"
    },
    {
      "text":"%md\n### First example : simple Hello Workd\n",
      "user":"anonymous",
      "config":{
        "tableHide":false,
        "editorSetting":{
          "language":"markdown",
          "editOnDblClick":true,
          "completionKey":"TAB",
          "completionSupport":false
        },
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "fontSize":9,
        "editorHide":true,
        "runOnSelectionChange":true,
        "title":false,
        "checkEmpty":true,
        "results":{

        },
        "enabled":true
      },
      "settings":{
        "params":{

        },
        "forms":{

        }
      },
      "apps":[

      ],
      "progressUpdateIntervalMs":500,
      "jobName":"paragraph_1572853061153_-243559072",
      "id":"paragraph_1572853061153_-243559072",
      "dateCreated":"2019-11-04T11:50:02+0000",
      "status":"FINISHED",
      "$$hashKey":"object:286",
      "focus":true,
      "results":{
        "code":"SUCCESS",
        "msg":[
          {
            "type":"HTML",
            "data":"<div class=\"markdown-body\">\n<h3>First example : simple Hello Workd</h3>\n\n</div>"
          }
        ]
      },
      "runtimeInfos":{

      }
    },
    {
      "text":"val dataset = benv.fromCollection(List(\n    Array(1,2,3,4,5,0,0,0,0,0,0,0,0,0,0),\n    Array(1,1,2,3,4,5,0,0,0,0,0,0,0,0,0),\n    Array(1,2,2,2,3,4,4,5,0,0,0,0,0,0,0),\n    Array(1,3,4,5,0,0,0,0,0,0,0,0,0,0,0),\n    Array(1,1,1,2,2,2,3,3,3,4,4,4,5,5,5),\n    Array(1,1,2,3,1,4,5,0,0,0,0,0,0,0,0),\n    Array(1,2,3,1,1,4,5,0,0,0,0,0,0,0,0),\n    Array(1,5,3,2,4,0,0,0,0,0,0,0,0,0,0),\n    Array(1,5,5,3,2,1,4,0,0,0,0,0,0,0,0),\n    Array(1,5,5,3,5,1,4,2,0,0,0,0,0,0,0),\n    Array(2,3,3,3,4,5,1,0,0,0,0,0,0,0,0)\n    )\n)\n\nval results = dataset.collect()\n\nvar table = \"%table\\n\"\ntable += \"t0 \\t t1 \\t t2 \\t t3 \\t t4 \\t t5 \\t t6 \\t t7 \\t t8 \\t t9 \\t t10 \\t t11 \\t t12 \\t t13 \\t t14 \\n\"\nfor(result <- results){\n    for(item <- result){\n        table += item + \"\\t\"\n    }\n    table += \"\\n\"\n}\nprintln(table)",
      "user":"anonymous",
      "dateUpdated":"2019-11-04T07:36:48+0000",
      "config":{
        "editorSetting":{
          "language":"markdown",
          "editOnDblClick":true,
          "completionKey":"TAB",
          "completionSupport":false
        },
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "fontSize":9,
        "runOnSelectionChange":true,
        "title":false,
        "checkEmpty":true,
        "results":{
          "1":{
            "graph":{
              "mode":"table",
              "height":300,
              "optionOpen":false,
              "setting":{
                "table":{
                  "tableGridState":{

                  },
                  "tableColumnTypeState":{
                    "names":{
                      "t0 ":"string",
                      " t1 ":"string",
                      " t2 ":"string",
                      " t3 ":"string",
                      " t4 ":"string",
                      " t5 ":"string",
                      " t6 ":"string",
                      " t7 ":"string",
                      " t8 ":"string",
                      " t9 ":"string",
                      " t10 ":"string",
                      " t11 ":"string",
                      " t12 ":"string",
                      " t13 ":"string",
                      " t14 ":"string"
                    },
                    "updated":false
                  },
                  "tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue":{
                    "useFilter":false,
                    "showPagination":false,
                    "showAggregationFooter":false
                  },
                  "updated":false,
                  "initialized":false
                }
              },
              "commonSetting":{

              }
            }
          }
        },
        "enabled":true
      },
      "settings":{
        "params":{

        },
        "forms":{

        }
      },
      "results":{
        "code":"SUCCESS",
        "msg":[
          {
            "type":"TEXT",
            "data":"\u001b[1m\u001b[34mdataset\u001b[0m: \u001b[1m\u001b[32morg.apache.flink.api.scala.DataSet[Array[Int]]\u001b[0m = org.apache.flink.api.scala.DataSet@6c77518a\n\u001b[1m\u001b[34mresults\u001b[0m: \u001b[1m\u001b[32mSeq[Array[Int]]\u001b[0m = Buffer(Array(1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 2, 2, 2, 3, 4, 4, 5, 0, 0, 0, 0, 0, 0, 0), Array(1, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5), Array(1, 1, 2, 3, 1, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 2, 3, 1, 1, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 5, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 5, 5, 3, 2, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0), Array(1, 5, 5, 3, 5, 1, 4, 2, 0, 0, 0, 0, 0, 0, 0), Array(2, 3, 3, 3, 4, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0))\n\u001b[1m\u001b[34mtable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m =\n\"%table\n\"\n"
          },
          {
            "type":"TABLE",
            "data":"t0 \t t1 \t t2 \t t3 \t t4 \t t5 \t t6 \t t7 \t t8 \t t9 \t t10 \t t11 \t t12 \t t13 \t t14 \n1\t2\t3\t4\t5\t0\t0\t0\t0\t0\t0\t0\t0\t0\t0\t\n1\t1\t2\t3\t4\t5\t0\t0\t0\t0\t0\t0\t0\t0\t0\t\n1\t2\t2\t2\t3\t4\t4\t5\t0\t0\t0\t0\t0\t0\t0\t\n1\t3\t4\t5\t0\t0\t0\t0\t0\t0\t0\t0\t0\t0\t0\t\n1\t1\t1\t2\t2\t2\t3\t3\t3\t4\t4\t4\t5\t5\t5\t\n1\t1\t2\t3\t1\t4\t5\t0\t0\t0\t0\t0\t0\t0\t0\t\n1\t2\t3\t1\t1\t4\t5\t0\t0\t0\t0\t0\t0\t0\t0\t\n1\t5\t3\t2\t4\t0\t0\t0\t0\t0\t0\t0\t0\t0\t0\t\n1\t5\t5\t3\t2\t1\t4\t0\t0\t0\t0\t0\t0\t0\t0\t\n1\t5\t5\t3\t5\t1\t4\t2\t0\t0\t0\t0\t0\t0\t0\t\n2\t3\t3\t3\t4\t5\t1\t0\t0\t0\t0\t0\t0\t0\t0\t\n"
          }
        ]
      },
      "apps":[

      ],
      "progressUpdateIntervalMs":500,
      "jobName":"paragraph_1572736277064_1173496589",
      "id":"paragraph_1572736277064_1173496589",
      "dateCreated":"2019-11-02T23:11:17+0000",
      "dateStarted":"2019-11-04T07:36:48+0000",
      "dateFinished":"2019-11-04T07:37:36+0000",
      "status":"FINISHED",
      "$$hashKey":"object:284"
    },
    {
      "text":"%md\n### Second example : counting words from a text\n",
      "user":"anonymous",
      "config":{
        "tableHide":false,
        "editorSetting":{
          "language":"markdown",
          "editOnDblClick":true,
          "completionSupport":false,
          "completionKey":"TAB"
        },
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "fontSize":9,
        "editorHide":true,
        "runOnSelectionChange":true,
        "title":false,
        "checkEmpty":true,
        "results":{

        },
        "enabled":true
      },
      "settings":{
        "params":{

        },
        "forms":{

        }
      },
      "apps":[

      ],
      "progressUpdateIntervalMs":500,
      "jobName":"paragraph_1572868209927_-1027592847",
      "id":"paragraph_1572868209927_-1027592847",
      "dateCreated":"2019-11-04T12:24:39+0000",
      "status":"FINISHED",
      "focus":true,
      "$$hashKey":"object:2203",
      "results":{
        "code":"SUCCESS",
        "msg":[
          {
            "type":"HTML",
            "data":"<div class=\"markdown-body\">\n<h3>Second example : counting words from a text</h3>\n\n</div>"
          }
        ]
      },
      "runtimeInfos":{

      }
    },
    {
      "text":"%flink  // let Zeppelin know what interpretter to use.\n\nval text = benv.fromElements(\"In the time of chimpanzees, I was a monkey\",   // some lines of text to analyze\n\"Butane in my veins and I'm out to cut the junkie\",\n\"With the plastic eyeballs, spray paint the vegetables\",\n\"Dog food stalls with the beefcake pantyhose\",\n\"Kill the headlights and put it in neutral\",\n\"Stock car flamin' with a loser in the cruise control\",\n\"Baby's in Reno with the Vitamin D\",\n\"Got a couple of couches, sleep on the love seat\",\n\"Someone came in sayin' I'm insane to complain\",\n\"About a shotgun wedding and a stain on my shirt\",\n\"Don't believe everything that you breathe\",\n\"You get a parking violation and a maggot on your sleeve\",\n\"So shave your face with some mace in the dark\",\n\"Savin' all your food stamps and burnin' down the trailer park\",\n\"Yo, cut it\")\n\n/*  The meat and potatoes:\nthis tells flink to iterate through the elements, in this case strings,\ntransform the string to lower case and split the string at white space into individual words\nthen finally aggregate the occurance of each word.\n\nThis creates the count variable which is a list of tuples of the form (word, occurances)\n*/\nval counts = text.flatMap{ _.toLowerCase.split(\"\\\\W+\") }.map { (_,1) }.groupBy(0).sum(1)\n\ncounts.collect().foreach(println(_))  // execute the script and print each element in the counts list",
      "user":"anonymous",
      "dateUpdated":"2019-11-04T07:37:41+0000",
      "config":{
        "editorSetting":{
          "language":"scala",
          "editOnDblClick":false,
          "completionKey":"TAB",
          "completionSupport":true
        },
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "fontSize":9,
        "results":{

        },
        "enabled":true,
        "runOnSelectionChange":true,
        "title":false,
        "checkEmpty":true
      },
      "settings":{
        "params":{

        },
        "forms":{

        }
      },
      "results":{
        "code":"SUCCESS",
        "msg":[
          {
            "type":"TEXT",
            "data":"\u001b[1m\u001b[34mtext\u001b[0m: \u001b[1m\u001b[32morg.apache.flink.api.scala.DataSet[String]\u001b[0m = org.apache.flink.api.scala.DataSet@5279ce4f\n\u001b[1m\u001b[34mcounts\u001b[0m: \u001b[1m\u001b[32morg.apache.flink.api.scala.AggregateDataSet[(String, Int)]\u001b[0m = org.apache.flink.api.scala.AggregateDataSet@7a8e8934\n(and,5)\n(beefcake,1)\n(breathe,1)\n(butane,1)\n(came,1)\n(car,1)\n(chimpanzees,1)\n(cut,2)\n(d,1)\n(dog,1)\n(don,1)\n(everything,1)\n(eyeballs,1)\n(face,1)\n(food,2)\n(get,1)\n(junkie,1)\n(love,1)\n(m,2)\n(my,2)\n(of,2)\n(on,3)\n(out,1)\n(paint,1)\n(pantyhose,1)\n(parking,1)\n(plastic,1)\n(put,1)\n(s,1)\n(savin,1)\n(sayin,1)\n(seat,1)\n(sleeve,1)\n(spray,1)\n(stalls,1)\n(stamps,1)\n(t,1)\n(the,11)\n(trailer,1)\n(vegetables,1)\n(violation,1)\n(vitamin,1)\n(wedding,1)\n(with,5)\n(a,7)\n(about,1)\n(all,1)\n(baby,1)\n(believe,1)\n(burnin,1)\n(complain,1)\n(control,1)\n(couches,1)\n(couple,1)\n(cruise,1)\n(dark,1)\n(down,1)\n(flamin,1)\n(got,1)\n(headlights,1)\n(i,3)\n(in,7)\n(insane,1)\n(it,2)\n(kill,1)\n(loser,1)\n(mace,1)\n(maggot,1)\n(monkey,1)\n(neutral,1)\n(park,1)\n(reno,1)\n(shave,1)\n(shirt,1)\n(shotgun,1)\n(sleep,1)\n(so,1)\n(some,1)\n(someone,1)\n(stain,1)\n(stock,1)\n(that,1)\n(time,1)\n(to,2)\n(veins,1)\n(was,1)\n(yo,1)\n(you,2)\n(your,3)\n"
          }
        ]
      },
      "apps":[

      ],
      "progressUpdateIntervalMs":500,
      "jobName":"paragraph_1572853008891_-997587946",
      "id":"paragraph_1572853008891_-997587946",
      "dateCreated":"2019-11-04T07:36:48+0000",
      "dateStarted":"2019-11-04T07:37:41+0000",
      "dateFinished":"2019-11-04T07:37:51+0000",
      "status":"FINISHED",
      "$$hashKey":"object:285"
    }
  ],
  "name":"/Tutorials/Flink Batch Demo",
  "id":"2ESHF4X1X",
  "defaultInterpreterGroup":"flink",
  "version":"0.9.0-SNAPSHOT",
  "permissions":{

  },
  "noteParams":{

  },
  "noteForms":{

  },
  "angularObjects":{

  },
  "config":{
    "isZeppelinNotebookCronEnable":false,
    "looknfeel":"default",
    "personalizedMode":"false"
  },
  "info":{

  },
  "path":"/Tutorials/Flink Batch Demo"
}