#
# This file is part of the eskimo project referenced at www.eskimo.sh. The licensing information below apply just as
# well to this individual file than to the Eskimo Project as a whole.
#
# Copyright 2019 eskimo.sh / https://www.eskimo.sh - All rights reserved.
# Author : eskimo.sh / https://www.eskimo.sh
#
# Eskimo is available under a dual licensing model : commercial and GNU AGPL.
# If you did not acquire a commercial licence for Eskimo, you can still use it and consider it free software under the
# terms of the GNU Affero Public License. You can redistribute it and/or modify it under the terms of the GNU Affero
# Public License  as published by the Free Software Foundation, either version 3 of the License, or (at your option)
# any later version.
# Compliance to each and every aspect of the GNU Affero Public License is mandatory for users who did no acquire a
# commercial license.
#
# Eskimo is distributed as a free software under GNU AGPL in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License along with Eskimo. If not,
# see <https://www.gnu.org/licenses/> or write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA, 02110-1301 USA.
#
# You can be released from the requirements of the license by purchasing a commercial license. Buying such a
# commercial license is mandatory as soon as :
# - you develop activities involving Eskimo without disclosing the source code of your own product, software, 
#   platform, use cases or scripts.
# - you deploy eskimo as part of a commercial product, platform or software.
# For more information, please contact eskimo.sh at https://www.eskimo.sh
#
# The above copyright notice and this licensing notice shall be included in all copies or substantial portions of the
# Software.
#

# The package application properties provides default values for system configurations

# An overriding config application.properties can be put in:
# (The list is ordered by precedence - properties defined in locations higher in the list override those defined in
# lower locations).
# 1. A /config subdirectory of the current directory
# 2. The current directory
# 3. A classpath /config package
# 4. The classpath root
# or an arbitrary location can ne passed at runtime:
# java -jar myproject.jar --spring.config.location=classpath:/default.properties,classpath:/override.properties

# Generic Spring Application configuration
# ----------------------------------------------------------------------------------------------------------------------

# Port number fo bind to (HTTP)
server.port=9090

# Use following property to put eskimo behind a specific context path in web server
# (This is usefull if a reverse proxy binds eskimo to have it under same path)
#server.servlet.context-path=/eskimo


welcome.message=Hello Eskimo
application.title=Eskimo
build.version=@project.version@
build.timestamp=@maven.build.timestamp@

spring.banner.image.width=30

# File upload max file size
spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB


# Deployment parameters
# ----------------------------------------------------------------------------------------------------------------------

# The folder in the eskimo root directory containing logos and icons of user-defined services
# (vs. pre-packaged services that have their icons and logos embedded directly in the eskimo web application )
eskimo.externalLogoAndIconFolder=static_images


# general parameters
# ----------------------------------------------------------------------------------------------------------------------

# The path (or URL) of the file containing the services definition
# (Default value classpath:services.json means using the eskimo runtime packaged definition file)
servicesDefinitionFile=classpath:services.json

# System Grafana Monitoring Dashboard ID
status.monitoringDashboardID=OMwJrHAWk

# Monitoring Dashboard refresh period
status.monitoringDashboardRefreshPeriod=30s


# SSH Connection Manager Properties
# ----------------------------------------------------------------------------------------------------------------------

# Port used to reach eskimo cluster nodes using SSH
connectionManager.defaultSSHPort=22

# SSH connection establishement timeout in milliseconds
connectionManager.tcpConnectionTimeout=20000

# SSH Key Exchange timeout in milliseconds
connectionManager.sshKeyExchangeTimeout=20000

# SSH Maximum Connection Age without usage before being force-closed in milliseconds
# 30 * 60 * 1000 = 30 minutes = 1800000 milliseconds
connectionManager.maximumConnectionAge=1800000

# SSH Operation Timeout in milliseconds
connectionManager.sshOperationTimeout=60000


# Web File Manager Properties
# ----------------------------------------------------------------------------------------------------------------------

# Maximum file size the system accepts to download in bytes
# 2 * 1024 * 1024 = 2Mb = 2097152 bytes
fileManager.maxFileSize=2097152


# System Configuration Properties
# ----------------------------------------------------------------------------------------------------------------------

# The number of times a services has to be reported as failed in a row before being considered as vanished
# (Vanished services are reinstalled upon next configuration change)
system.failedServicesTriggerCount=5

# The location where packages distribution are found
system.packageDistributionPath=./packages_distrib

# The location where services setup scripts are found
system.servicesSetupPath=./services_setup

# The location where packages build scripts are found
system.packagesDevPath=./packages_dev

# The set of docker images for packages to be built
system.packagesToBuild=base-eskimo,ntp,zookeeper,gluster,gdash,elasticsearch,cerebro,kibana,logstash,prometheus,grafana,kafka,kafka-manager,mesos-master,spark,flink,zeppelin

# The name of the mesos packages to download (or build)
system.mesosPackages=mesos-debian,mesos-redhat,mesos-suse

# The Root URL to download the packages from
system.packagesDownloadUrlRoot=https://niceideas.ch/eskimo/

# The number of threads fetching nodes status in parallel
system.statusFetchThreadCount=10

# The number of installation to perform in parallel (number of nodes)
system.parallelismInstallThreadCount=10

# The timeout in seconds to wait for a system operation (installation, restart, etc.) to complete
system.operationWaitTimoutSeconds=800

# The timeout in seconds to wait for a all marathon operation (installation, restart, etc.) to complete
system.marathonOperationWaitTimoutSeconds=6000

# The timeout in seconds to wait for base system installation (lots of packages to be downloaded)
system.baseInstallWaitTimoutSeconds=1000

# The amount of memory that is considered reserver on cluster nodes and thus not available for services in MB
system.reservedMemoryOnNodes=1000

# The period in seconds between every status update / node status querying
system.statusUpdatePeriodSeconds=5


# Security Configuration
# ----------------------------------------------------------------------------------------------------------------------

# The path of the file where eskimo users are defined in the form
# { "users" : [ { "username" : "user1", "password" : "password1" }, { "username" : "user2" : "password" : "$2a$10$W5pa6y.k95V27ABPd7eFqeqniTnpYqYOiGl75jJoXApG8SBEvERYO" } ] }
# If the file doesn't exist, eskimo will create it upon first startup with a default user "admin / password"
# Encoded passwords can be generated using ch.niceideas.eskimo.utils.EncodedPasswordGenerator
security.userJsonFile=/tmp/eskimo-users.json

# Enable persistent HTTP sessions  surviving server restart
server.servlet.session.persistent=true


# SSH Terminal Properties
# ----------------------------------------------------------------------------------------------------------------------

# Default Screen size
terminal.defaultSessionWidth=120
terminal.defaultSessionHeight=30

# terminal idle timeout
terminal.idleTimeoutSeconds=600

