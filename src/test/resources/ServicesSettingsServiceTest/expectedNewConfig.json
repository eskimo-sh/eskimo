{
  "settings": [
    {
      "settings": [],
      "name": "cluster-master"
    },
    {
      "settings": [],
      "name": "cluster-manager"
    },
    {
      "settings": [],
      "name": "user-console"
    },
    {
      "settings": [],
      "name": "distributed-time"
    },
    {
      "settings": [],
      "name": "distributed-filesystem"
    },
    {
      "settings": [],
      "name": "cluster-slave"
    },
    {
      "settings": [],
      "name": "database-manager"
    },
    {
      "settings": [{
        "filename": "database.yml",
        "propertyFormat": "{name}: {value}",
        "service": "database",
        "propertyType": "VARIABLE",
        "commedistributed-timerefix": "#",
        "filesystemService": "database",
        "properties": [
          {
            "defaultValue": "false",
            "name": "bootstrap.memory_lock",
            "comment": "Lock the memory on startup",
            "validationRegex": "^(true)$|^(false)$"
          },
          {
            "defaultValue": "true",
            "name": "action.destructive_requires_name",
            "comment": "Require explicit names when deleting indices",
            "validationRegex": "^(true)$|^(false)$",
            "value": "false"
          }
        ]
      }],
      "name": "database"
    },
    {
      "settings": [],
      "name": "broker-manager"
    },
    {
      "settings": [
        {
          "filename": "server.properties",
          "propertyFormat": "{name}={value}",
          "service": "broker",
          "propertyType": "VARIABLE",
          "commedistributed-timerefix": "#",
          "filesystemService": "broker",
          "properties": [
            {
              "defaultValue": "3",
              "name": "num.network.threads",
              "comment": "The number of threads that the server uses for receiving requests from the network and sending responses to the network",
              "validationRegex": "^[0-9\\.]+$",
              "value": "5"
            },
            {
              "defaultValue": "8",
              "name": "num.io.threads",
              "comment": "The number of threads that the server uses for processing requests, which may include disk I/O",
              "validationRegex": "^[0-9\\.]+$",
              "value": "10"
            },
            {
              "defaultValue": "102400",
              "name": "socket.send.buffer.bytes",
              "comment": "The send buffer (SO_SNDBUF) used by the socket server",
              "validationRegex": "^[0-9\\.]+$"
            },
            {
              "defaultValue": "102400",
              "name": "socket.receive.buffer.bytes",
              "comment": "The receive buffer (SO_RCVBUF) used by the socket server",
              "validationRegex": "^[0-9\\.]+$"
            },
            {
              "defaultValue": "104857600",
              "name": "socket.request.max.bytes",
              "comment": "The maximum size of a request that the socket server will accept (protection against OOM)",
              "validationRegex": "^[0-9\\.]+$"
            },
            {
              "defaultValue": "1",
              "name": "num.partitions",
              "comment": "The default number of log partitions per topic. More partitions allow greater parallelism for consumption, but this will also result in more files across the brokers.",
              "validationRegex": "^[0-9\\.]+$"
            },
            {
              "defaultValue": "168",
              "name": "log.retention.hours",
              "comment": "The minimum age of a log file to be eligible for deletion due to age",
              "validationRegex": "^[0-9\\.]+$"
            }
          ]
        },
        {
          "filename": "test.properties",
          "propertyFormat": "{name}={value}",
          "service": "broker",
          "propertyType": "VARIABLE",
          "commedistributed-timerefix": "#",
          "filesystemService": "broker",
          "properties": [{
            "defaultValue": "3",
            "name": "num.network.test",
            "comment": "Just a test property",
            "validationRegex": "^[0-9\\.]+$"
          }]
        }
      ],
      "name": "broker"
    },
    {
      "settings": [{
        "filename": "calculator-defaults.conf",
        "propertyFormat": "{name}={value}",
        "service": "calculator-runtime",
        "propertyType": "VARIABLE",
        "commedistributed-timerefix": "#",
        "filesystemService": "calculator",
        "properties": [
          {
            "defaultValue": "800m",
            "name": "calculator.driver.memory",
            "comment": "Limiting the driver (client) memory",
            "validationRegex": "^([0-9\\.]+[kmgt]?)$|^(\\[ESKIMO_DEFAULT\\])$",
            "value": "500m"
          },
          {
            "defaultValue": "5",
            "name": "calculator.rpc.numRetries",
            "comment": "Number of times to retry before an RPC task gives up. An RPC task will run at most times of this number.",
            "validationRegex": "^[0-9\\.]+$",
            "value": "10"
          },
          {
            "defaultValue": "5s",
            "name": "calculator.rpc.retry.wait",
            "comment": "Duration for an RPC ask operation to wait before retrying.",
            "validationRegex": "^[0-9\\.]+s$"
          },
          {
            "defaultValue": "FAIR",
            "name": "calculator.scheduler.mode",
            "comment": "The scheduling mode between jobs submitted to the same calculatorContext. \nCan be FIFO or FAIR. FAIR Seem not to work well with mesos",
            "validationRegex": "^(FAIR)$|^(FIFO))$",
            "value": "FIFO"
          },
          {
            "defaultValue": "20s",
            "name": "calculator.locality.wait",
            "comment": "How long to wait to launch a data-local task before giving up and launching it on a less-local node.",
            "validationRegex": "^[0-9\\.]+s$"
          },
          {
            "defaultValue": "200s",
            "name": "calculator.dynamicAllocation.executorIdleTimeout",
            "comment": "If dynamic allocation is enabled and an executor has been idle for more than this duration, the executor will be removed. \n (Caution here : small values cause issues. I have executors killed with 10s for instance)",
            "validationRegex": "^[0-9\\.]+s$"
          },
          {
            "defaultValue": "300s",
            "name": "calculator.dynamicAllocation.cachedExecutorIdleTimeout",
            "comment": "If dynamic allocation is enabled and an executor which has cached data blocks has been idle for more than this duration, the executor will be removed. \n (Caution here : small values cause issues. I have executors killed with 10s for instance)",
            "validationRegex": "^[0-9\\.]+s$",
            "value": "400s"
          },
          {
            "defaultValue": "[ESKIMO_DEFAULT]",
            "name": "calculator.executor.memory",
            "comment": "Defining default calculator executor memory allowed by Eskimo Memory Management (found in topology). \nUSE [ESKIMO_DEFAULT] to leave untouched or e.g. 800m, 1.2g, etc.",
            "validationRegex": "^([0-9\\.]+[kmgt]?)$|^(\\[ESKIMO_DEFAULT\\])$"
          }
        ]
      }],
      "name": "calculator-runtime"
    }
  ],
  "status": "OK"
}